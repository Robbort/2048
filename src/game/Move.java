package game;

import java.util.Random;
public class Move{
	public static int a[][] = new int[4][4];//初始界面数组
	public static int ismo = 0;//判断是否会移动的标志
	public static int score = 0;//初始分数
	
	//左移
	public void left(int a[][]){
		int i;
		ismo=0;
		for(i=0;i<4;i++){
            if(a[i][0]==0&&a[i][1]==0&&a[i][2]==0&&a[i][3]!=0){//0 0 0 1型
                a[i][0]=a[i][3];
                a[i][3]=0;
                ismo=1;
            }
            if(a[i][0]==0&&a[i][1]==0&&a[i][2]!=0&&a[i][3]==0){//0 0 1 0型
                a[i][0]=a[i][2];
                a[i][2]=0;
                ismo=1;
            }
            if(a[i][0]==0&&a[i][1]!=0&&a[i][2]==0&&a[i][3]==0){//0 1 0 0型
                a[i][0]=a[i][1];
                a[i][1]=0;
                ismo=1;
            }
            if(a[i][0]==0&&a[i][1]==0&&a[i][2]!=0&&a[i][3]!=0){//0 0 1 1型
                if(a[i][2]==a[i][3]){
                    a[i][0]=a[i][2]*2;
                    score += a[i][0];
                }
                else {a[i][0]=a[i][2];a[i][1]=a[i][3];}
                a[i][2]=0;a[i][3]=0;
                ismo=1;
            }
            if(a[i][0]==0&&a[i][1]!=0&&a[i][2]==0&&a[i][3]!=0){//0 1 0 1型
                if(a[i][1]==a[i][3])
                    {a[i][0]=a[i][1]*2;
                    score += a[i][0];
                    a[i][1]=0;a[i][3]=0;}
                else {a[i][0]=a[i][1];a[i][1]=a[i][3];a[i][3]=0;}
                ismo=1;
            }
            if(a[i][0]==0&&a[i][1]!=0&&a[i][2]!=0&&a[i][3]==0){//0 1 1 0型
                if(a[i][1]==a[i][2])
                    {a[i][0]=a[i][1]*2;
                    score += a[i][0];
                    a[i][1]=0;a[i][2]=0;}
                else {a[i][0]=a[i][1];a[i][1]=a[i][2];a[i][2]=0;}
                ismo=1;
            }
            if(a[i][0]!=0&&a[i][1]!=0&&a[i][2]==0&&a[i][3]==0){//1 1 0 0型
                if(a[i][0]==a[i][1])
                    {a[i][0]=a[i][1]*2;
                    score += a[i][0];
                    a[i][1]=0;ismo=1;}
            }
            if(a[i][0]!=0&&a[i][1]==0&&a[i][2]==0&&a[i][3]!=0){//1 0 0 1型
                if(a[i][0]==a[i][3]){
                    a[i][0]=a[i][0]*2;
                    score += a[i][0];
                }
                else a[i][1]=a[i][3];
                a[i][3]=0;
                ismo=1;
            }
            if(a[i][0]!=0&&a[i][1]==0&&a[i][2]!=0&&a[i][3]==0){//1 0 1 0型
                if(a[i][0]==a[i][2]){
                    a[i][0]=a[i][0]*2;
                    score += a[i][0];
                }
                else a[i][1]=a[i][2];
                a[i][2]=0;
                ismo=1;
            }
            if(a[i][0]==0&&a[i][1]!=0&&a[i][2]!=0&&a[i][3]!=0){//0 1 1 1型
                if(a[i][1]==a[i][2])
                {a[i][0]=a[i][1]*2;
                score += a[i][0];
                a[i][1]=a[i][3];a[i][2]=0;}
                else if(a[i][2]==a[i][3])
                    {a[i][0]=a[i][1];a[i][1]=a[i][2]*2;score += a[i][1];}
                else {a[i][0]=a[i][1];a[i][1]=a[i][2];a[i][2]=a[i][3];}
                a[i][3]=0;
                ismo=1;
            }
            if(a[i][0]!=0&&a[i][1]==0&&a[i][2]!=0&&a[i][3]!=0){//1 0 1 1型
                if(a[i][0]==a[i][2])
                {a[i][0]=a[i][0]*2;
                score += a[i][0];
                a[i][1]=a[i][3];a[i][2]=0;}
                else if(a[i][2]==a[i][3]){
                    a[i][1]=a[i][2]*2;
                    score += a[i][1];
                    }
                else {a[i][1]=a[i][2];a[i][2]=a[i][3];}
                a[i][3]=0;
                ismo=1;
            }
            if(a[i][0]!=0&&a[i][1]!=0&&a[i][2]==0&&a[i][3]!=0){//1 1 0 1型
                if(a[i][0]==a[i][1])
                {a[i][0]=a[i][1]*2;
                score += a[i][0];
                a[i][1]=a[i][3];}
                else if(a[i][1]==a[i][3]){
                    a[i][1]=a[i][1]*2;
                    score += a[i][1];
                }
                else a[i][2]=a[i][3];
                a[i][3]=0;
                ismo=1;
            }
            if(a[i][0]!=0&&a[i][1]!=0&&a[i][2]!=0&&a[i][3]==0){//1 1 1 0型
                if(a[i][0]==a[i][1])
                    {a[i][0]=a[i][0]*2;score += a[i][0];a[i][1]=a[i][2];a[i][2]=0;ismo=1;}
                else if(a[i][1]==a[i][2])
                    {a[i][1]=a[i][1]*2;score += a[i][1];a[i][2]=0;ismo=1;}
            }
            if(a[i][0]!=0&&a[i][1]!=0&&a[i][2]!=0&&a[i][3]!=0){//1 1 1 1型
                if(a[i][0]==a[i][1]){
                    a[i][0]=a[i][0]*2;
                    score += a[i][0];
                    if(a[i][2]==a[i][3]){
                        a[i][1]=a[i][2]*2;
                        score += a[i][1];
                        a[i][2]=0;
                        a[i][3]=0;
                    }
                    else{
                        a[i][1]=a[i][2];
                        a[i][2]=a[i][3];
                        a[i][3]=0;
                    }
                    ismo=1;
                }
                else if(a[i][1]==a[i][2]){
                    a[i][1]=a[i][1]*2;
                    score += a[i][1];
                    a[i][2]=a[i][3];
                    a[i][3]=0;
                    ismo=1;
                }
                else if(a[i][2]==a[i][3]){
                    a[i][2]=a[i][2]*2;
                    score += a[i][1];
                    a[i][3]=0;
                    ismo=1;
                }
            }
        }
	}
	//右移
	public void right(int a[][]){
		int i;
		ismo=0;
		for(i=0;i<4;i++){
            if(a[i][0]!=0&&a[i][1]==0&&a[i][2]==0&&a[i][3]==0){//1 0 0 0型
                a[i][3]=a[i][0];
                a[i][0]=0;
                ismo=1;
            }
            if(a[i][0]==0&&a[i][1]==0&&a[i][2]!=0&&a[i][3]==0){//0 0 1 0型
                a[i][3]=a[i][2];
                a[i][2]=0;
                ismo=1;
            }
            if(a[i][0]==0&&a[i][1]!=0&&a[i][2]==0&&a[i][3]==0){//0 1 0 0型
                a[i][3]=a[i][1];
                a[i][1]=0;
                ismo=1;
            }
            if(a[i][0]==0&&a[i][1]==0&&a[i][2]!=0&&a[i][3]!=0){//0 0 1 1型
                if(a[i][2]==a[i][3]){
                    a[i][3]=a[i][2]*2;
                    score += a[i][3];
                    a[i][2]=0;
                    ismo=1;
                }
            }
            if(a[i][0]==0&&a[i][1]!=0&&a[i][2]==0&&a[i][3]!=0){//0 1 0 1型
                if(a[i][1]==a[i][3])
                    {a[i][3]=a[i][1]*2;
                    score += a[i][3];
                    a[i][1]=0;}
                else {a[i][2]=a[i][1];a[i][1]=0;}
                ismo=1;
            }
            if(a[i][0]==0&&a[i][1]!=0&&a[i][2]!=0&&a[i][3]==0){//0 1 1 0型
                if(a[i][1]==a[i][2])
                    {a[i][3]=a[i][1]*2;
                    score += a[i][3];a[i][1]=0;a[i][2]=0;}
                else {a[i][3]=a[i][2];a[i][2]=a[i][1];a[i][1]=0;}
                ismo=1;
            }
            if(a[i][0]!=0&&a[i][1]!=0&&a[i][2]==0&&a[i][3]==0){//1 1 0 0型
                if(a[i][0]==a[i][1]){
                    a[i][3]=a[i][1]*2;
                    score += a[i][3];
                }
                else {a[i][3]=a[i][1];a[i][2]=a[i][0];}
                a[i][0]=0;a[i][1]=0;
                ismo=1;
            }
            if(a[i][0]!=0&&a[i][1]==0&&a[i][2]==0&&a[i][3]!=0){//1 0 0 1型
                if(a[i][0]==a[i][3]){
                    a[i][3]=a[i][0]*2;
                    score += a[i][3];
                }
                else a[i][2]=a[i][0];
                a[i][0]=0;
                ismo=1;
            }
            if(a[i][0]!=0&&a[i][1]==0&&a[i][2]!=0&&a[i][3]==0){//1 0 1 0型
                if(a[i][0]==a[i][2])
                    {a[i][3]=a[i][0]*2;
                    score += a[i][3];a[i][2]=0;}
                else {a[i][3]=a[i][2];a[i][2]=a[i][0];}
                a[i][0]=0;
                ismo=1;
            }
            if(a[i][0]==0&&a[i][1]!=0&&a[i][2]!=0&&a[i][3]!=0){//0 1 1 1型
                if(a[i][3]==a[i][2])
                {a[i][3]=a[i][3]*2;
                score += a[i][3];a[i][2]=a[i][1];a[i][1]=0;ismo=1;}
                else if(a[i][1]==a[i][2])
                    {a[i][2]=a[i][1]*2;
                    score += a[i][2];a[i][1]=0;ismo=1;}
            }
            if(a[i][0]!=0&&a[i][1]==0&&a[i][2]!=0&&a[i][3]!=0){//1 0 1 1型
                if(a[i][3]==a[i][2])
                {a[i][3]=a[i][3]*2;
                score += a[i][3];a[i][2]=a[i][0];}
                else if(a[i][0]==a[i][2]){
                    a[i][2]=a[i][2]*2;
                    score += a[i][2];}
                else a[i][1]=a[i][0];
                    a[i][0]=0;
                ismo=1;
            }
            if(a[i][0]!=0&&a[i][1]!=0&&a[i][2]==0&&a[i][3]!=0){//1 1 0 1型
                if(a[i][3]==a[i][1])
                {a[i][3]=a[i][1]*2;
                score += a[i][3];a[i][2]=a[i][0];}
                else if(a[i][1]==a[i][0]){
                    a[i][2]=a[i][1]*2;
                    score += a[i][2];}
                else {a[i][2]=a[i][1];a[i][1]=a[i][0];}
                a[i][0]=0;
                ismo=1;
            }
            if(a[i][0]!=0&&a[i][1]!=0&&a[i][2]!=0&&a[i][3]==0){//1 1 1 0型
                if(a[i][2]==a[i][1])
                    {a[i][3]=a[i][1]*2;
                    score += a[i][3];a[i][2]=a[i][0];a[i][1]=0;}
                else if(a[i][1]==a[i][0])
                    {a[i][3]=a[i][2];a[i][2]=a[i][1]*2;
                    score += a[i][2];a[i][1]=0;}
                else {a[i][3]=a[i][2];a[i][2]=a[i][1];a[i][1]=a[i][0];}
                a[i][0]=0;
                ismo=1;
            }
            if(a[i][0]!=0&&a[i][1]!=0&&a[i][2]!=0&&a[i][3]!=0){//1 1 1 1型
                if(a[i][3]==a[i][2]){
                    a[i][3]=a[i][2]*2;
                    score += a[i][3];
                    if(a[i][0]==a[i][1]){
                        a[i][2]=a[i][0]*2;
                        score += a[i][2];
                        a[i][0]=0;a[i][1]=0;
                    }
                    else{
                        a[i][2]=a[i][1];
                        a[i][1]=a[i][0];
                        a[i][0]=0;
                    }
                    ismo=1;
                }
                else if(a[i][1]==a[i][2]){
                    a[i][2]=a[i][1]*2;
                    score += a[i][2];
                    a[i][1]=a[i][0];
                    a[i][0]=0;
                    ismo=1;
                }
                else if(a[i][0]==a[i][1]){
                    a[i][1]=a[i][1]*2;
                    score += a[i][1];
                    a[i][0]=0;
                    ismo=1;
                }
            }
        }
	}
	//上移
	public void up(int a[][]){
		int i;
		ismo=0;
		for(i=0;i<4;i++){
            if(a[0][i]==0&&a[1][i]==0&&a[2][i]==0&&a[3][i]!=0){//0 0 0 1型
                a[0][i]=a[3][i];
                a[3][i]=0;
                ismo=1;
            }
            if(a[0][i]==0&&a[1][i]==0&&a[2][i]!=0&&a[3][i]==0){//0 0 1 0型
                a[0][i]=a[2][i];
                a[2][i]=0;
                ismo=1;
            }
            if(a[0][i]==0&&a[1][i]!=0&&a[2][i]==0&&a[3][i]==0){//0 1 0 0型
                a[0][i]=a[1][i];
                a[1][i]=0;
                ismo=1;
            }
            if(a[0][i]==0&&a[1][i]==0&&a[2][i]!=0&&a[3][i]!=0){//0 0 1 1型
                if(a[2][i]==a[3][i]){
                    a[0][i]=a[2][i]*2;
                    score += a[0][i];}
                else {a[0][i]=a[2][i];a[1][i]=a[3][i];}
                a[2][i]=0;a[3][i]=0;
                ismo=1;
            }
            if(a[0][i]==0&&a[1][i]!=0&&a[2][i]==0&&a[3][i]!=0){//0 1 0 1型
                if(a[1][i]==a[3][i])
                    {a[0][i]=a[1][i]*2;
                    score += a[0][i];a[1][i]=0;a[3][i]=0;}
                else {a[0][i]=a[1][i];a[1][i]=a[3][i];a[3][i]=0;}
                ismo=1;
            }
            if(a[0][i]==0&&a[1][i]!=0&&a[2][i]!=0&&a[3][i]==0){//0 1 1 0型
                if(a[1][i]==a[2][i])
                    {a[0][i]=a[1][i]*2;
                    score += a[0][i];a[1][i]=0;a[2][i]=0;}
                else {a[0][i]=a[1][i];a[1][i]=a[2][i];a[2][i]=0;}
                ismo=1;
            }
            if(a[0][i]!=0&&a[1][i]!=0&&a[2][i]==0&&a[3][i]==0){//1 1 0 0型
                if(a[0][i]==a[1][i])
                    {a[0][i]=a[1][i]*2;
                    score += a[1][i];a[1][i]=0;ismo=1;}
            }
            if(a[0][i]!=0&&a[1][i]==0&&a[2][i]==0&&a[3][i]!=0){//1 0 0 1型
                if(a[0][i]==a[3][i]){
                    a[0][i]=a[0][i]*2;
                    score += a[0][i];}
                else a[1][i]=a[3][i];
                a[3][i]=0;
                ismo=1;
            }
            if(a[0][i]!=0&&a[1][i]==0&&a[2][i]!=0&&a[3][i]==0){//1 0 1 0型
                if(a[0][i]==a[2][i]){
                    a[0][i]=a[0][i]*2;
                    score += a[0][i];}
                else a[1][i]=a[2][i];
                a[2][i]=0;
                ismo=1;
            }
            if(a[0][i]==0&&a[1][i]!=0&&a[2][i]!=0&&a[3][i]!=0){//0 1 1 1型
                if(a[1][i]==a[2][i])
                {a[0][i]=a[1][i]*2;
                score += a[0][i];a[1][i]=a[3][i];a[2][i]=0;}
                else if(a[2][i]==a[3][i])
                    {a[0][i]=a[1][i];a[1][i]=a[2][i]*2;
                    score += a[1][i];}
                else {a[0][i]=a[1][i];a[1][i]=a[2][i];a[2][i]=a[3][i];}
                a[3][i]=0;
                ismo=1;
            }
            if(a[0][i]!=0&&a[1][i]==0&&a[2][i]!=0&&a[3][i]!=0){//1 0 1 1型
                if(a[0][i]==a[2][i])
                {a[0][i]=a[0][i]*2;
                score += a[0][i];a[1][i]=a[3][i];a[2][i]=0;}
                else if(a[2][i]==a[3][i]){
                    a[1][i]=a[2][i]*2;
                    score += a[1][i];}
                else {a[1][i]=a[2][i];a[2][i]=a[3][i];}
                a[3][i]=0;
                ismo=1;
            }
            if(a[0][i]!=0&&a[1][i]!=0&&a[2][i]==0&&a[3][i]!=0){//1 1 0 1型
                if(a[0][i]==a[1][i])
                {a[0][i]=a[1][i]*2;
                score += a[0][i];a[1][i]=a[3][i];}
                else if(a[1][i]==a[3][i]){
                    a[1][i]=a[1][i]*2;
                    score += a[1][i];
                }
                else a[2][i]=a[3][i];
                a[3][i]=0;
                ismo=1;
            }
            if(a[0][i]!=0&&a[1][i]!=0&&a[2][i]!=0&&a[3][i]==0){//1 1 1 0型
                if(a[0][i]==a[1][i])
                    {a[0][i]=a[0][i]*2;
                    score += a[0][i];a[1][i]=a[2][i];a[2][i]=0;ismo=1;}
                else if(a[1][i]==a[2][i])
                    {a[1][i]=a[1][i]*2;
                    score += a[1][i];a[2][i]=0;ismo=1;}
            }
            if(a[0][i]!=0&&a[1][i]!=0&&a[2][i]!=0&&a[3][i]!=0){//1 1 1 1型
                if(a[0][i]==a[1][i]){
                    a[0][i]=a[0][i]*2;
                    score += a[0][i];
                    if(a[2][i]==a[3][i]){
                        a[1][i]=a[2][i]*2;
                        score += a[1][i];
                        a[2][i]=0;
                        a[3][i]=0;
                    }
                    else{
                        a[1][i]=a[2][i];
                        a[2][i]=a[3][i];
                        a[3][i]=0;
                    }
                    ismo=1;
                }
                else if(a[1][i]==a[2][i]){
                    a[1][i]=a[1][i]*2;
                    score += a[1][i];
                    a[2][i]=a[3][i];
                    a[3][i]=0;
                    ismo=1;
                }
                else if(a[2][i]==a[3][i]){
                    a[2][i]=a[2][i]*2;
                    score += a[2][i];
                    a[3][i]=0;
                    ismo=1;
                }
            }
        }
	}
	//下移
	public void down(int a[][]){
		int i;
		ismo=0;
		for(i=0;i<4;i++){
            if(a[0][i]!=0&&a[1][i]==0&&a[2][i]==0&&a[3][i]==0){//1 0 0 0型
                a[3][i]=a[0][i];
                a[0][i]=0;
                ismo=1;
            }
            if(a[0][i]==0&&a[1][i]==0&&a[2][i]!=0&&a[3][i]==0){//0 0 1 0型
                a[3][i]=a[2][i];
                a[2][i]=0;
                ismo=1;
            }
            if(a[0][i]==0&&a[1][i]!=0&&a[2][i]==0&&a[3][i]==0){//0 1 0 0型
                a[3][i]=a[1][i];
                a[1][i]=0;
                ismo=1;
            }
            if(a[0][i]==0&&a[1][i]==0&&a[2][i]!=0&&a[3][i]!=0){//0 0 1 1型
                if(a[2][i]==a[3][i]){
                    a[3][i]=a[2][i]*2;
                    score += a[3][i];
                    a[2][i]=0;
                    ismo=1;
                }
            }
            if(a[0][i]==0&&a[1][i]!=0&&a[2][i]==0&&a[3][i]!=0){//0 1 0 1型
                if(a[1][i]==a[3][i])
                    {a[3][i]=a[1][i]*2;
                    score += a[3][i];a[1][i]=0;}
                else {a[2][i]=a[1][i];a[1][i]=0;}
                ismo=1;
            }
            if(a[0][i]==0&&a[1][i]!=0&&a[2][i]!=0&&a[3][i]==0){//0 1 1 0型
                if(a[1][i]==a[2][i])
                    {a[3][i]=a[1][i]*2;
                    score += a[3][i];a[1][i]=0;a[2][i]=0;}
                else {a[3][i]=a[2][i];a[2][i]=a[1][i];a[1][i]=0;}
                ismo=1;
            }
            if(a[0][i]!=0&&a[1][i]!=0&&a[2][i]==0&&a[3][i]==0){//1 1 0 0型
                if(a[0][i]==a[1][i]){
                    a[3][i]=a[1][i]*2;
                    score += a[3][i];}
                else {a[3][i]=a[1][i];a[2][i]=a[0][i];}
                a[0][i]=0;a[1][i]=0;
                ismo=1;
            }
            if(a[0][i]!=0&&a[1][i]==0&&a[2][i]==0&&a[3][i]!=0){//1 0 0 1型
                if(a[0][i]==a[3][i]){
                    a[3][i]=a[0][i]*2;
                    score += a[3][i];}
                else a[2][i]=a[0][i];
                a[0][i]=0;
                ismo=1;
            }
            if(a[0][i]!=0&&a[1][i]==0&&a[2][i]!=0&&a[3][i]==0){//1 0 1 0型
                if(a[0][i]==a[2][i])
                    {a[3][i]=a[0][i]*2;
                    score += a[3][i];a[2][i]=0;}
                else {a[3][i]=a[2][i];a[2][i]=a[0][i];}
                a[0][i]=0;
                ismo=1;
            }
            if(a[0][i]==0&&a[1][i]!=0&&a[2][i]!=0&&a[3][i]!=0){//0 1 1 1型
                if(a[3][i]==a[2][i])
                {a[3][i]=a[3][i]*2;
                score += a[3][i];a[2][i]=a[1][i];a[1][i]=0;ismo=1;}
                else if(a[1][i]==a[2][i])
                    {a[2][i]=a[1][i]*2;
                    score += a[2][i];a[1][i]=0;ismo=1;}
            }
            if(a[0][i]!=0&&a[1][i]==0&&a[2][i]!=0&&a[3][i]!=0){//1 0 1 1型
                if(a[3][i]==a[2][i])
                {a[3][i]=a[3][i]*2;
                score += a[3][i];a[2][i]=a[0][i];}
                else if(a[0][i]==a[2][i]){
                    a[2][i]=a[2][i]*2;
                    score += a[2][i];}
                else a[1][i]=a[0][i];
                    a[0][i]=0;
                ismo=1;
            }
            if(a[0][i]!=0&&a[1][i]!=0&&a[2][i]==0&&a[3][i]!=0){//1 1 0 1型
                if(a[3][i]==a[1][i])
                {a[3][i]=a[1][i]*2;
                score += a[3][i];a[2][i]=a[0][i];}
                else if(a[1][i]==a[0][i]){
                    a[2][i]=a[1][i]*2;
                    score += a[2][i];}
                else {a[2][i]=a[1][i];a[1][i]=a[0][i];}
                a[0][i]=0;
                ismo=1;
            }
            if(a[0][i]!=0&&a[1][i]!=0&&a[2][i]!=0&&a[3][i]==0){//1 1 1 0型
                if(a[2][i]==a[1][i])
                    {a[3][i]=a[1][i]*2;
                    score += a[3][i];a[2][i]=a[0][i];a[1][i]=0;}
                else if(a[1][i]==a[0][i])
                    {a[3][i]=a[2][i];a[2][i]=a[1][i]*2;
                    score += a[2][i];a[1][i]=0;}
                else {a[3][i]=a[2][i];a[2][i]=a[1][i];a[1][i]=a[0][i];}
                a[0][i]=0;
                ismo=1;
            }
            if(a[0][i]!=0&&a[1][i]!=0&&a[2][i]!=0&&a[3][i]!=0){//1 1 1 1型
                if(a[3][i]==a[2][i]){
                    a[3][i]=a[2][i]*2;
                    score += a[3][i];
                    if(a[0][i]==a[1][i]){
                        a[2][i]=a[0][i]*2;
                        score += a[2][i];
                        a[0][i]=0;a[1][i]=0;
                    }
                    else{
                        a[2][i]=a[1][i];
                        a[1][i]=a[0][i];
                        a[0][i]=0;
                    }
                    ismo=1;
                }
                else if(a[1][i]==a[2][i]){
                    a[2][i]=a[1][i]*2;
                    score += a[2][i];
                    a[1][i]=a[0][i];
                    a[0][i]=0;
                    ismo=1;
                }
                else if(a[0][i]==a[1][i]){
                    a[1][i]=a[1][i]*2;
                    score += a[1][i];
                    a[0][i]=0;
                    ismo=1;
                }
            }
        }
	}
	//随机增加方块
	public void add(int a[][]){
	   int i,j,x,y,ismo=1;
	     for(i=0;i<4;i++)
	         for(j=0;j<4;j++)
	             if(a[i][j]==0){
	                 ismo=0;
	                 break;
	             }
	     while(ismo==0){
		     y=Math.abs(new Random().nextInt())%4;
		     x=Math.abs(new Random().nextInt())%4;
	         if(a[x][y]==0){
	             a[x][y]=2;
	             break;
	         }
	     }
	 }

	//初始化
	public void Init(int a[][]){
		a = new int[4][4];
		for(int i=0;i<4;i++)
			for(int j=0;j<4;j++)
				a[i][j]=0;
	}

	//判断游戏结束
	public boolean Isend(int a[][]){
		int i,j,k;
	    for(i=0;i<4;i++){
	        for(j=0;j<4;j++){//判断每一行
	            if(a[i][j]==0) //假如还有空位置就不会结束
	            	return false;
	            if(j!=3){//相邻有相同数字也不会结束
	                if(a[i][j]==a[i][j+1]) 
	                	return false;
	            }
	        }
	        for(k=0;k<3;k++)//判断每一列
	            if(a[k][i]==a[k+1][i]) return false;
	    }
	    return true;
	}
	//控制台输出此时数组界面
	public void print(int a[][]){
		for(int i=0;i<4;i++){
			for(int j=0;j<4;j++)
				System.out.print(a[i][j]+"  ");
			System.out.println();
		}
		System.out.println("Score:"+score);
	}
	
}